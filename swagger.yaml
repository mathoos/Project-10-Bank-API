openapi: 3.0.3

info:
  title: Transaction management for Argent Bank
  description: API to view, add, edit and delete transactions.
  version: 1.0.11
externalDocs:
  description: Argent Bank API repository
  url: https://github.com/mathoos/Project-10-Bank-API
servers:
  - url: http://localhost:3001/api/v2


    
paths:
  /categories:
    get:
      tags:
        - Categories
      summary: Get an overview of all user accounts with their total balances.
      description: Returns a list of all user accounts with their total balances.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'      
        '401':
          description: Access unauthorized
        '500':
          description : unexpected server error
      security:
        - bank_auth:
            - read:accounts
            
            
  /accounts:
    get:
      tags:
        - Accounts
      summary: Get an overview of all user accounts with their total balances.
      description: Returns a list of all user accounts with their total balances.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOverview'      
        '401':
          description: Access unauthorized
        '500':
          description : unexpected server error
      security:
        - bank_auth:
            - read:accounts
            
  /accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get details of a specific user account.
      description: Returns the details of a user account identified by its account ID.
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          description: The unique id for the account.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'     
        '400':
          description: Invalid account ID
        '401':
          description: Access unauthorized
        '403' :
          description : permission denied.
        '404':
          description: Account not found
        '500':
          description : unexpected server error
      security:
        - bank_auth:
          - read:accounts
            
  /accounts/{accountId}/transactions:
    get:
      tags:
        - Transactions
      summary: Get all transactions for a specific user account, grouped by month.
      description: Returns a list of transactions for a specific user account, grouped by month.
      parameters:
        - name: accountId
          in: path
          description: The unique id for the account.
          required: true
          schema:
            type: integer
        - name: month
          in: query
          description: Filter transactions by a specific month (optional).
          required : false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
              example:
                - transactionId: "104"
                  date: "05-10-2023"
                  description: "Cash withdrawal"
                  amount: 50.00
                - transactionId: "101"
                  date: "05-18-2023"
                  description: "Cash withdrawal"
                  amount: 100.00
        '400':
          description: Invalid request
        '401' : 
          description : access unauthorized ; unauthenticated user.
        '403' :
          description : permission denied.
        '404':
          description: Account not found
        '500' :
          description : Internal Server Error.
      security:
        - bank_auth:
          - read:accounts
  
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transactions
      summary: Get details of a specific transaction
      description: Returns the type, the category and the note of a specific transaction identified its id.
      parameters:
        - name: accountId
          in: path
          description: The unique id for the account.
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The unique id for the transaction.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '400':
          description: Invalid request
        '401':
          description: Access unauthorized
        '403' :
          description : permission denied.
        '404':
          description: Account not found
        '500':
          description : unexpected server error
      security:
        - bank_auth:
          - read:accounts
          
    patch:
      tags:
        - Transactions
      summary: Update the category of a specific transaction or update the note of a specific transaction
      description: Updates the category or a note of a specific transaction identified by the account ID and transaction ID.
      parameters:
        - name: accountId
          in: path
          description: The unique id for the account.
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: The unique id for the transaction.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                  description: The unique id for the new category.
                note:
                  type: string
                  description: The unique id for the new category.
      responses:
        '200':
          description: Category updated successfully
        '400':
          description: si re√ßoit objet vide ou note vide
        '401':
          description: Access unauthorized
        '403' :
          description : transaction qui n'appartient pas
        '404':
          description: category doesn't exist
        '500':
          description : unexpected server error
      security:
        - bank_auth:
          - write:transactions


    post:
      tags:
        - Transaction note
      summary: Add a note to a specific transaction
      description: Add a note to a specific transaction identified by its transaction ID.
      parameters:
        - name: accountId
          in: path
          description: The unique identifier for the account.
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The unique identifier for the transaction.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                  description: The note to be added to the transaction.
      responses:
        '201':
          description: Note added to the transaction successfully
        '400':
          description: Invalid request
        '404':
          description: Transaction not found
      security:
        - bank_auth:
          - write:transactions
            
          
  /accounts/{accountId}/transactions/{transactionId}/note:
    delete:
      tags:
        - Transaction note
      summary: Delete the note of a specific transaction
      description: Delete the note associated with a specific transaction identified by the account ID and transaction ID.
      parameters:
        - name: accountId
          in: path
          description: The unique identifier for the account.
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The unique identifier for the transaction.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Transaction or note not found
      security:
        - bank_auth:
          - write:transactions



components:
  schemas:
    Categories:
      type: object
      properties:
        id:
          type: string
          description: The unique id for the account.
        label: 
          type: string
          description: Name of the category.
    AccountOverview:
      type: object
      properties:
        accountId:
          type: string
          description: The unique id for the account.
        accountType:
          type: string
          description: The type of the account (e.g., savings, checking).
        balance:
          type: number
          format: float
          description: The balance of the account.
    AccountDetails:
      type: object
      properties:
        accountId:
          type: string
          description: The unique id for the account.
        accountType:
          type: string
          description: The type of the account (e.g., savings, checking).
        balance:
          type: number
          format: float
          description: The balance of the account.
    Transaction:
      type: object
      properties:
        transactionId:
          type: string
          description: The unique id for the transaction.
        date:
          type: string
          description: The date of the transaction.
        description:
          type: string
          description: A description of the transaction.
        amount:
          type: number
          format: float
          description: The transaction amount.
    TransactionDetails:
      type: object
      properties:
        categoryId:
          type: string
          description: The unique id for the category.
        transactionId:
          type: string
          description: The unique id for the transaction.
        date:
          type: string
          description: The date of the transaction.
        type:
          type: string
          description: The type of the transaction.
        description:
          type: string
          description: A description of the transaction.
        amount:
          type: number
          format: float
          description: The transaction amount.
  securitySchemes:
    bank_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read:accounts: Read user accounts